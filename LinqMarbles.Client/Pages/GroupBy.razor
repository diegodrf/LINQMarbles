@attribute [Route(RouteConstant.GroupBy)]
<PageTitle>LINQ Marbles - GroupBy</PageTitle>

<PageContainer OperatorText="GroupBy(o => o.Letter)">
    <InputPanel>
        @foreach (var marble in _marbles)
        {
            <Marble Color="marble.Color"
                    Close="@(() => _marbles.Remove(marble))">
                @marble.Number,@marble.Content
            </Marble>
        }
        <AddMarble OnAdd="AddNewContent" T="string" />
    </InputPanel>
    <OutputPanel>
        <div class="centered-content">
            @foreach (var group in _marbles.GroupBy(g => g.Content))
            {
                <span class="array">
                    <MudText Inline="true" Typo="Typo.h5">@group.Key</MudText>
                    <MudIcon Icon="@Icons.Material.Filled.ArrowCircleRight"/>
                    @foreach (var element in group)
                    {
                        <Marble Color="element.Color">@element.Number,@element.Content</Marble>
                    }
                </span>
            }
        </div>
    </OutputPanel>
</PageContainer>

@code {
    private readonly List<MarbleMultiModel> _marbles = new()
    {
        new(1, "A"),
        new(2, "D"), 
        new(3, "A"), 
        new(4, "B")
    };

    private void AddNewContent(string input)
    {
        var split = input.Split(',', StringSplitOptions.TrimEntries | StringSplitOptions.RemoveEmptyEntries);
        if (split.Length != 2)
        {
            return;
        }
        
        var number = int.Parse(split[0]);
        var content = split[1];
        
        _marbles.Add(new MarbleMultiModel(number, content));
    }
}
