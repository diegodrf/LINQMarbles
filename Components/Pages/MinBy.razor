@page "/min-by"

<PageContainer OperatorText="MinBy(o => o.Letter)">
    <InputPanel>
        @foreach (var marble in _marbles)
        {
            <Marble Color="marble.Color"
                    Close="@(() => _marbles.Remove(marble))">
                @marble.Number,@marble.Content
            </Marble>
        }
        <AddMarble DefaultContent='"5,A"' OnAdd="AddNewContentToList" T="string" />
    </InputPanel>
    <OutputPanel>
        @{ var marble = _marbles.MinBy(m => m.Content); }
        @if (marble is not null)
        {
            <Marble Color="marble.Color">@marble.Number,@marble.Content</Marble>
        }
    </OutputPanel>
</PageContainer>

@code {
    private readonly List<MarbleMultiModel> _marbles = new()
    {
        new(1, "C"),
        new(2, "D"), 
        new(3, "A"), 
        new(4, "B")
    };
    
    private void AddNewContentToList(string input)
    {
        var split = input.Split(',', StringSplitOptions.TrimEntries | StringSplitOptions.RemoveEmptyEntries);
        if (split.Length != 2)
        {
            return;
        }
        
        var number = int.Parse(split[0]);
        var content = split[1];
        
        _marbles.Add(new MarbleMultiModel(number, content));
    }
}
